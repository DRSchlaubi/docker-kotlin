# Because GH actions sucks we can't have anchors therefore pls run this command to generate actions script
# Please edit release.yaml.template instead of release.yaml and then run this command
# Cmd: yq eval 'explode(.)' .\release.yaml.template > release.yaml
# Tool installation docs: https://mikefarah.gitbook.io/yq/#install
on:
  release:
    types:
      - created
jobs:
  update_readme:
    name: "Update Readme"
    runs-on: ubuntu-20.04
  - uses: actions/checkout@v2
      with:
        ref: "main"
      - uses: actions/cache@v1
        with:
          path: |
            tools/.gradle/caches
            tools/build
            tools/readme_generator/.gradle/caches
            tools/readme_generator/build
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Setup Java JDK 16
        uses: actions/setup-java@v2.1.0
        with:
          distribution: 'adopt'
          java-version: 16
      - name: Gradle (RUN)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: cd tools && gradle :readme_generator:run
      - name: Prepare git to sign commit
        uses: crazy-max/ghaction-import-gpg@v3
        with:
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git-user-signingkey: true
          git-commit-gpgsign: true
      - name: Update Previous file
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Update checked Kotlin version store
          commit_options: '-S' # sign commit
          commit_author: Michael Rittmeister <michael@rittmeister.in>
          file_pattern: tools/release_notifier/checked_versions.json
  jdk16:
    name: "Build on JDK 16"
    runs-on: ubuntu-20.04
    if: &release_if "github.event_name == 'release'"
    env:
      JDK_TAG: 16
      ROOT_TAG: true
      GHCR_PASSWORD: ${{ secrets.GHCR_PASSWORD }}
      GHCR_ACCOUNT: ${{ secrets.GHCR_ACCOUNT }}
    steps: &release_version
      - uses: actions/checkout@v2
      - name: Retrieve version
        id: get_version
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)
      - name: Build Oracle
        env: &release_env
          KOTLIN_VERSION: ${{ steps.get_version.outputs.VERSION }}
          ADDITIONAL_TAG: ${{ steps.get_version.outputs.VERSION}}
          TAG: "${{ steps.get_version.outputs.VERSION }}-jdk${{env.JDK_TAG}}"
          DOCKER_ACCOUNT: ${{ secrets.DOCKER_ACCOUNT }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          COMPILER_URL: "https://github.com/JetBrains/kotlin/releases/download/v${{ steps.get_version.outputs.VERSION }}/kotlin-compiler-${{ steps.get_version.outputs.VERSION }}.zip"
          SOURCE: "openjdk:${{env.JDK_TAG}}-oracle"
          BUILD_CONTEXT: "oracle"
        run: &build_image "scripts/build.sh"
      - name: Build with Debian
        env:
          <<: *release_env
          ADDITIONAL_TAG: "${{ steps.get_version.outputs.VERSION }}-debian"
          TAG: "${{ steps.get_version.outputs.VERSION }}-jdk${{env.JDK_TAG}}-debian"
          SOURCE: "adoptopenjdk/openjdk${{env.JDK_TAG}}:debian"
          BUILD_CONTEXT: "debian"
        run: *build_image
      - name: Build with Alpine
        env:
          <<: *release_env
          ADDITIONAL_TAG: "${{ steps.get_version.outputs.VERSION }}-alpine"
          SOURCE: "adoptopenjdk/openjdk${{env.JDK_TAG}}:alpine"
          TAG: "${{ steps.get_version.outputs.VERSION }}-jdk${{env.JDK_TAG}}-alpine"
          BUILD_CONTEXT: "alpine"
        run: *build_image
      - name: Build slim
        env:
          <<: *release_env
          ADDITIONAL_TAG: "${{ steps.get_version.outputs.VERSION }}-slim"
          SOURCE: "adoptopenjdk/openjdk${{env.JDK_TAG}}:alpine-slim"
          TAG: "${{ steps.get_version.outputs.VERSION }}-jdk${{env.JDK_TAG}}-slim"
          BUILD_CONTEXT: "slim"
        run: *build_image
  jdk11:
    name: "Build on JDK 11"
    runs-on: ubuntu-20.04
    if: *release_if
    env:
      ROOT_TAG: false
      JDK_TAG: 11
    steps: *release_version
  jdk8:
    name: "Build on JDK 1.8"
    runs-on: ubuntu-20.04
    if: *release_if
    env:
      ROOT_TAG: false
      JDK_TAG: 8
    steps: *release_version